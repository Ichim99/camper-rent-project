{"version":3,"file":"static/js/485.145b7229.chunk.js","mappings":"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","sources":["components/FiltersForm/FiltersForm.styled.jsx","components/FiltersForm/FiltersForm.jsx","pages/Catalog.jsx"],"sourcesContent":["import styled, { css } from \"styled-components\";\r\nimport { commonInputStyles } from \"components/Modal/BookForm/BookForm.styled\";\r\nimport { RedButtonStyles } from \"components/AdvertCard/AdvertCard.styled\";\r\n\r\nconst commonRadioCheckbox = css`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 5px;\r\n  text-align: center;\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 10px;\r\n  border: 1px solid var(--border-color);\r\n  padding: 10px;\r\n  color: var(--text-color);\r\n  cursor: pointer;\r\n  pointer-events: all;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 16px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    font-size: 14px;\r\n    padding: 17px;\r\n  }\r\n`;\r\n\r\nexport const CatalogContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 50px;\r\n  padding: 50px 0;\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const FormFilters = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 32px;\r\n  margin-top: 30px;\r\n`;\r\n\r\nexport const GoToPrevPageBtn = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 10px;\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  align-self: flex-start;\r\n  color: var(--text-color);\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    padding-left: 50px;\r\n    margin-bottom: -50px;\r\n  }\r\n`;\r\n\r\nexport const LabelLocation = styled.label`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 8px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: var(--light-text);\r\n\r\n  svg {\r\n    position: absolute;\r\n    top: 45px;\r\n    left: 15px;\r\n    fill: none;\r\n    z-index: 1;\r\n    stroke: var(--text-color);\r\n  }\r\n\r\n  .react-dropdown-select {\r\n    ${commonInputStyles}\r\n    padding: 15px;\r\n    padding-left: 40px;\r\n    opacity: 1;\r\n    color: var(--light-text);\r\n    transition: box-shadow var(--linear-transition);\r\n    background-color: var(--grey);\r\n    z-index: 1;\r\n\r\n    input {\r\n      color: var(--light-text);\r\n\r\n      &::placeholder {\r\n        color: var(--light-text);\r\n        opacity: 0.5;\r\n      }\r\n    }\r\n\r\n    &:focus-within {\r\n      box-shadow: 0 0 5px var(--accent-red);\r\n    }\r\n\r\n    svg {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  .react-dropdown-select-dropdown {\r\n    width: 100%;\r\n    background-color: var(--grey);\r\n    border-radius: 10px;\r\n    border: 2px solid var(--accent-red);\r\n  }\r\n\r\n  .react-dropdown-select-item {\r\n    border-bottom: 1px solid var(--light-text);\r\n\r\n    &:hover:not(.react-dropdown-select-item-selected) {\r\n      color: var(--white);\r\n      background-color: var(--accent-red);\r\n      opacity: 0.7;\r\n    }\r\n  }\r\n\r\n  .react-dropdown-select-item.react-dropdown-select-item-selected,\r\n  .react-dropdown-select-item.react-dropdown-select-item-active {\r\n    color: var(--white);\r\n    font-weight: bold;\r\n    background-color: var(--accent-red);\r\n  }\r\n`;\r\n\r\nexport const FiltersWrap = styled.div`\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: var(--light-text);\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 14px;\r\n`;\r\n\r\nexport const LabelFilters = styled.label`\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  line-height: 1.2;\r\n  color: var(--text-color);\r\n  pointer-events: none;\r\n\r\n  hr {\r\n    opacity: 0.3;\r\n    background-color: var(--border-color);\r\n    display: block;\r\n    margin: 24px 0;\r\n  }\r\n`;\r\n\r\nexport const FieldSet = styled.fieldset`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n  border: none;\r\n  padding: 0;\r\n`;\r\n\r\nexport const InputWrap = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: calc((100% - 2 * 10px) / 3);\r\n  height: 85px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: calc((100% - 4 * 10px) / 5);\r\n    height: 95px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    width: calc((100% - 2 * 10px) / 3);\r\n    height: 95px;\r\n  }\r\n\r\n  input {\r\n    width: 130px;\r\n    height: 80px;\r\n    padding: 15px;\r\n    position: absolute;\r\n    opacity: 0;\r\n    cursor: pointer;\r\n    pointer-events: all;\r\n\r\n    &:checked + div {\r\n      border-color: var(--accent-red);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const RadioBtn = styled.div`\r\n  ${commonRadioCheckbox}\r\n`;\r\n\r\nexport const CheckBox = styled.div`\r\n  ${commonRadioCheckbox}\r\n`;\r\n\r\nexport const ButtonsWrap = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  button {\r\n    ${RedButtonStyles}\r\n    width: 150px;\r\n\r\n    @media screen and (min-width: 1440px) {\r\n      margin: unset;\r\n    }\r\n  }\r\n\r\n  #reset-button {\r\n    background-color: var(--grey);\r\n    color: var(--light-text);\r\n    width: 150px;\r\n\r\n    @media screen and (min-width: 1440px) {\r\n      &:hover,\r\n      &:focus {\r\n        background-color: var(--input-background);\r\n        color: var(--light-text);\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { useState, useRef } from \"react\";\r\nimport Select from \"react-dropdown-select\";\r\nimport { LOCATION_OPTIONS, FILTERS_TYPE, FILTERS_EQUIPMENT } from \"constants\";\r\nimport { gerAllSearchParams, smoothScrollToTarget } from \"helpers\";\r\nimport { LocationIcon } from \"components/icons\";\r\nimport {\r\n  FiltersWrap,\r\n  FormFilters,\r\n  LabelFilters,\r\n  LabelLocation,\r\n  RadioBtn,\r\n  CheckBox,\r\n  FieldSet,\r\n  InputWrap,\r\n  ButtonsWrap,\r\n} from \"./FiltersForm.styled\";\r\n\r\nconst FiltersForm = ({ setPage, searchParams, setSearchParams }) => {\r\n  const [filterParams, setFilterParams] = useState({});\r\n  const checkbox = useRef(null);\r\n  const dropdownRef = useRef(null);\r\n\r\n  const params = {};\r\n  gerAllSearchParams(searchParams, params);\r\n\r\n  const handleFilterAdverts = (e) => {\r\n    e.preventDefault();\r\n    setSearchParams({});\r\n    setPage(1);\r\n    setSearchParams({ ...filterParams });\r\n    smoothScrollToTarget(\"advertBlock\");\r\n  };\r\n\r\n  const resetFilters = () => {\r\n    [...checkbox.current?.elements].forEach((input) => {\r\n      if (input.type === \"checkbox\" || input.type === \"radio\") {\r\n        input.checked = false;\r\n      }\r\n    });\r\n\r\n    dropdownRef.current?.clearAll();\r\n    setSearchParams({});\r\n    setFilterParams({});\r\n    setPage(1);\r\n  };\r\n\r\n  const selectLocation = (arr) => {\r\n    if (arr.length > 0) {\r\n      setFilterParams((prev) => ({ ...prev, location: arr[0].value }));\r\n    }\r\n  };\r\n\r\n  const selectEquipment = ({ target }) => {\r\n    if (target.checked) {\r\n      setFilterParams((prev) => ({\r\n        ...prev,\r\n        [target.name]: target.value,\r\n      }));\r\n    } else {\r\n      setFilterParams((prev) => {\r\n        const { [target.name]: removedParam, ...rest } = prev;\r\n        return { ...rest };\r\n      });\r\n    }\r\n  };\r\n\r\n  const selectVehicleType = ({ target }) => {\r\n    setFilterParams((prev) => ({\r\n      ...prev,\r\n      form: target.value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <FormFilters onSubmit={handleFilterAdverts} ref={checkbox}>\r\n      <LabelLocation>\r\n        Location\r\n        <Select\r\n          ref={dropdownRef}\r\n          placeholder=\"Location\"\r\n          options={LOCATION_OPTIONS}\r\n          onChange={selectLocation}\r\n          color=\"var(--accent-red)\"\r\n        />\r\n        <LocationIcon width={20} height={20} />\r\n      </LabelLocation>\r\n\r\n      <FiltersWrap>\r\n        Filters\r\n        <LabelFilters>\r\n          Vehicle equipment\r\n          <hr />\r\n          <FieldSet>\r\n            {FILTERS_EQUIPMENT.map(({ name, value, icon: Icon, text }, i) => (\r\n              <InputWrap key={`${text}/${i}`}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name={name}\r\n                  value={value}\r\n                  onChange={selectEquipment}\r\n                />\r\n                <CheckBox>\r\n                  <Icon width={20} height={20} size={20} /> {text}\r\n                </CheckBox>\r\n              </InputWrap>\r\n            ))}\r\n          </FieldSet>\r\n        </LabelFilters>\r\n        <LabelFilters>\r\n          Vehicle type\r\n          <hr />\r\n          <FieldSet>\r\n            {FILTERS_TYPE.map(({ value, icon: Icon, text }, i) => (\r\n              <InputWrap key={`${text}/${i}`}>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"type\"\r\n                  value={value}\r\n                  onChange={selectVehicleType}\r\n                />\r\n                <RadioBtn>\r\n                  <Icon width={20} height={20} /> {text}\r\n                </RadioBtn>\r\n              </InputWrap>\r\n            ))}\r\n          </FieldSet>\r\n        </LabelFilters>\r\n      </FiltersWrap>\r\n\r\n      <ButtonsWrap>\r\n        <button type=\"submit\">Search</button>\r\n        <button\r\n          id=\"reset-button\"\r\n          type=\"button\"\r\n          aria-label=\"Reset filter fields\"\r\n          onClick={resetFilters}\r\n        >\r\n          Reset\r\n        </button>\r\n      </ButtonsWrap>\r\n    </FormFilters>\r\n  );\r\n};\r\n\r\nexport default FiltersForm;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { FaArrowLeft } from \"react-icons/fa\";\r\nimport { getAllAdverts, getTotal } from \"../redux/adverts/operations\";\r\nimport {\r\n  selectAdverts,\r\n  selectError,\r\n  selectIsLoading,\r\n  selectTotal,\r\n} from \"../redux/adverts/selectors\";\r\nimport { LIMIT } from \"constants\";\r\nimport { smoothScrollToTarget } from \"helpers\";\r\nimport MainContainer from \"layouts/MainContainer\";\r\nimport FiltersForm from \"components/FiltersForm\";\r\nimport Loader from \"components/Loader\";\r\nimport AdvertCard from \"components/AdvertCard\";\r\nimport {\r\n  AdvertsList,\r\n  CardItem,\r\n  ListBtnWrap,\r\n  LoadMoreBtn,\r\n  NoItemsMsg,\r\n} from \"components/AdvertCard/AdvertCard.styled\";\r\nimport {\r\n  CatalogContainer,\r\n  GoToPrevPageBtn,\r\n} from \"components/FiltersForm/FiltersForm.styled\";\r\n\r\nconst Catalog = () => {\r\n  const [page, setPage] = useState(1);\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [showLoadMore, setShowLoadMore] = useState(true);\r\n\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(selectIsLoading);\r\n  const adverts = useSelector(selectAdverts);\r\n  const total = useSelector(selectTotal);\r\n  const error = useSelector(selectError);\r\n\r\n  useEffect(() => {\r\n    setShowLoadMore(true);\r\n\r\n    if (page >= Math.ceil(total / LIMIT)) {\r\n      setShowLoadMore(false);\r\n    }\r\n\r\n    dispatch(getTotal(searchParams));\r\n    dispatch(getAllAdverts({ page, limit: LIMIT, searchParams }));\r\n  }, [dispatch, page, total, searchParams]);\r\n\r\n  const handleLoadMore = () => {\r\n    if (page >= Math.ceil(total / LIMIT) || adverts.length < LIMIT) {\r\n      setShowLoadMore(false);\r\n      return;\r\n    }\r\n\r\n    setShowLoadMore(true);\r\n    setPage((prev) => prev + 1);\r\n    smoothScrollToTarget(\"goBack\");\r\n  };\r\n\r\n  const handleGoToPrevPage = () => {\r\n    setPage((prev) => prev - 1);\r\n    smoothScrollToTarget(\"advertBlock\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MainContainer>\r\n        <CatalogContainer>\r\n          <FiltersForm\r\n            setPage={setPage}\r\n            searchParams={searchParams}\r\n            setSearchParams={setSearchParams}\r\n          />\r\n\r\n          <ListBtnWrap id=\"advertBlock\">\r\n            {page > 1 && (\r\n              <GoToPrevPageBtn\r\n                id=\"goBack\"\r\n                type=\"button\"\r\n                onClick={handleGoToPrevPage}\r\n              >\r\n                <FaArrowLeft size={20} fill=\"var(--text-color)\" />\r\n                Go back\r\n              </GoToPrevPageBtn>\r\n            )}\r\n            {adverts.length < 0 || error === \"Not found\" ? (\r\n              <NoItemsMsg>No items</NoItemsMsg>\r\n            ) : (\r\n              <AdvertsList>\r\n                {adverts.map((card) => (\r\n                  <CardItem key={card._id}>\r\n                    <AdvertCard card={card} />\r\n                  </CardItem>\r\n                ))}\r\n              </AdvertsList>\r\n            )}\r\n\r\n            {showLoadMore && !error && adverts.length > 0 && (\r\n              <LoadMoreBtn type=\"button\" onClick={handleLoadMore}>\r\n                Load more\r\n              </LoadMoreBtn>\r\n            )}\r\n          </ListBtnWrap>\r\n        </CatalogContainer>\r\n      </MainContainer>\r\n      {isLoading && <Loader />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Catalog;\r\n"],"names":["commonRadioCheckbox","css","_templateObject","_taggedTemplateLiteral","CatalogContainer","styled","div","_templateObject2","FormFilters","form","_templateObject3","GoToPrevPageBtn","button","_templateObject4","LabelLocation","label","_templateObject5","commonInputStyles","FiltersWrap","_templateObject6","LabelFilters","_templateObject7","FieldSet","fieldset","_templateObject8","InputWrap","_templateObject9","RadioBtn","_templateObject10","CheckBox","_templateObject11","ButtonsWrap","_templateObject12","RedButtonStyles","_ref","setPage","searchParams","setSearchParams","filterParams","setFilterParams","useState","checkbox","useRef","dropdownRef","gerAllSearchParams","selectEquipment","_ref2","target","checked","prev","name","value","removedParam","rest","selectVehicleType","_ref3","_jsxs","onSubmit","e","preventDefault","smoothScrollToTarget","ref","children","_jsx","Select","placeholder","options","LOCATION_OPTIONS","onChange","arr","length","location","color","LocationIcon","width","height","FILTERS_EQUIPMENT","map","_ref4","i","icon","Icon","text","type","size","concat","FILTERS_TYPE","_ref5","id","onClick","resetFilters","_checkbox$current","_dropdownRef$current","current","elements","forEach","input","clearAll","Catalog","page","useSearchParams","showLoadMore","setShowLoadMore","dispatch","useDispatch","isLoading","useSelector","selectIsLoading","adverts","selectAdverts","total","selectTotal","error","selectError","useEffect","Math","ceil","LIMIT","getTotal","getAllAdverts","limit","_Fragment","MainContainer","FiltersForm","ListBtnWrap","handleGoToPrevPage","FaArrowLeft","fill","NoItemsMsg","AdvertsList","card","CardItem","AdvertCard","_id","LoadMoreBtn","handleLoadMore","Loader"],"sourceRoot":""}